/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-04-09 12:32:14 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import board.model.vo.*;
import member.model.vo.Member;

public final class boardListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/board/../common/menubar.jsp", Long.valueOf(1585741290157L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("board.model.vo");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write(' ');

 	ArrayList<Board> list = (ArrayList)request.getAttribute("list");
 	PageInfo pi = (PageInfo)request.getAttribute("pi");
 	
 	int currentPage = pi.getCurrentPage();
 	int maxPage = pi.getMaxPage();
 	int startPage = pi.getStartPage();
 	int endPage = pi.getEndPage();
 
      out.write("   \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\t.outer{\r\n");
      out.write("\t\twidth: 800px; height: 500px; background: rgba(255, 255, 255, 0.4); border: 5px solid white;\r\n");
      out.write("\t\tmargin-left: auto; margin-right: auto; margin-top: 50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#listArea{text-align: center;}\r\n");
      out.write("\t.tableArea{width:650px;\theight:350px; margin-left:auto;\tmargin-right:auto;}\r\n");
      out.write("\tth{border-bottom: 1px solid grey;}\r\n");
      out.write("\t.pagingArea button{border-radius: 15px; background: #D5D5D5;}\r\n");
      out.write("\t.searchArea{margin-right: 50px;}\r\n");
      out.write("\t.searchArea button{background: #D1B2FF; border-radius: 5px; color: white; width: 80px; heigth: 25px; text-align: center;}\r\n");
      out.write("\tbutton:hover{cursor: pointer;}\r\n");
      out.write("\t#numBtn{background: #B2CCFF;}\r\n");
      out.write("\t#choosen{background: #FFD8D8;}\r\n");
      out.write("\t#listArea{margin: auto;}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	Member loginUser =  (Member)session.getAttribute("loginUser");
	//System.out.println(loginUser);  //login이 null이면 아무도 로그인 안함
	String msg = (String)request.getAttribute("msg");
	

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>JSP&Servlet</title>\r\n");
      out.write("<script type=\"text/javascript\" src=\"");
      out.print( request.getContextPath() );
      out.write("/js/jquery-3.4.1.min.js\"></script>  <!--  request.getContextPath() : webcontent밑을 지칭 -->\r\n");
      out.write("<style>\r\n");
      out.write("\tbody{ \r\n");
      out.write("\t\tbackground:url('");
      out.print( request.getContextPath() );
      out.write("/images/bg.png') no-repeat center center fixed;\r\n");
      out.write("\t\t\t\t\t\t/* ContextPath를 굳이 적을 필요 없이 어떤 이름이든지 이렇게 쓰면 contextPath가 나옴 */ \r\n");
      out.write("\t\tbackground-size: cover;\r\n");
      out.write("\t}\r\n");
      out.write("\t#loginBtn input, #memberJoinBtn{\r\n");
      out.write("\t\tfloat: right; display: inline-block; text-align: center; background: #D1B2FF; \r\n");
      out.write("\t\tcolor: white; height: 25px; width: 100px; border-radius: 15px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#memberJoinBtn{background: #B2CCFF;}\r\n");
      out.write("\t#loginBtn:hover, #memberJoinBtn:hover{cursor: pointer;}\r\n");
      out.write("\t.loginArea > form{float: right;}\r\n");
      out.write("\t#logoutBtn, #myPageBtn{\r\n");
      out.write("\t\tfloat: right; display: inline-block; text-align: center; background: #D1B2FF;\r\n");
      out.write("\t\tcolor: white; height: 25px; width: 100px; border-radius: 15px;\r\n");
      out.write("\t}\r\n");
      out.write("\t#myPageBtn{background: #B2CCFF;} \r\n");
      out.write("\t\r\n");
      out.write("\t.wrap{background: white; width: 100%; height: 50px;}\r\n");
      out.write("\t\r\n");
      out.write("\t.menu{\r\n");
      out.write("\t\t\tbackground: white; color: navy; text-align: center; font-weight: bold;\r\n");
      out.write("\t\t\tvertical-align: middle; width:150px; height: 50px; display: table-cell;\r\n");
      out.write("\t\t }\r\n");
      out.write("\t\t \r\n");
      out.write("\tnav{width: 600px; margin-left: auto; margin-right: auto;}\r\n");
      out.write("\t\r\n");
      out.write("\t.menu:hover{background: beige; color: orangered; font-weight: bold; cursor: pointer;}\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1 align=\"center\">Welcome to JSP&Servlet World!</h1>\r\n");
      out.write("\t<div class=\"loginArea\">\r\n");
      out.write("\t");
 if(loginUser == null){ 
      out.write("\r\n");
      out.write("\t\t<form id=\"loginForm\" action=\"");
      out.print( request.getContextPath() );
      out.write("/login.me\" method=\"post\" onsubmit=\"return validate();\">\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>ID : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"userId\" id=\"userId\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>PWD : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"userPwd\" id=\"userPwd\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"saveId\" id=\"saveId\">&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label for=\"saveId\">아이디 저장</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t\t<div id=\"memberJoinBtn\" onclick=\"memberJoin();\">회원가입</div>\r\n");
      out.write("\t\t\t\t<div id=\"loginBtn\"><input type=\"submit\" value=\"로그인\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t<div id=\"userInfo\" align=\"right\">\r\n");
      out.write("\t\t\t\t<label>");
      out.print( loginUser.getUserName() );
      out.write("님의 방문을 환영합니다.</label>\r\n");
      out.write("\t\t\t\t<div class=\"btns\">\r\n");
      out.write("\t\t\t\t<div id=\"myPageBtn\" onclick=\"myPage();\">내 정보 보기</div>\r\n");
      out.write("\t\t\t\t<div id=\"logoutBtn\" onclick=\"logout();\">로그아웃</div>\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<br clear=\"all\">\r\n");
      out.write("\t<br>\r\n");
      out.write("\t\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t\t<nav>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goHome();\">Home</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goNotice();\">공지사항</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goBoard();\">게시판</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goThumbnail();\">사진게시판</div>\r\n");
      out.write("\t\t</nav>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction validate(){\r\n");
      out.write("\t\t\tif($('#userId').val().trim().length==0){\r\n");
      out.write("\t\t\t\talert('아이디를 입력해주세요');\r\n");
      out.write("\t\t\t\t$('#userId').focus();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tif($('#userPwd').val().trim().length==0){\r\n");
      out.write("\t\t\t\talert('비밀번호를 입력해주세요');\r\n");
      out.write("\t\t\t\t$('#userPwd').focus();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction logout(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/logout.me\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction memberJoin(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/views/member/memberJoinForm.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tvar msg = \"");
      out.print( msg );
      out.write("\";\r\n");
      out.write("\t\t//var msg = null;\r\n");
      out.write("\t\t//var msg = \"회원가입에 성공했습니다.\"\r\n");
      out.write("\t\t$(function(){\r\n");
      out.write("\t\t\tif(msg != 'null'){\r\n");
      out.write("\t\t\t\talert(msg);\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t});\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction myPage(){\r\n");
      out.write("\t\t\tlocation.href='");
      out.print( request.getContextPath() );
      out.write("/myPage.me';\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction goHome(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/index.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction goNotice(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/list.no\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction goBoard(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/list.bo\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\tfunction goThumbnail(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print( request.getContextPath() );
      out.write("/list.th\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<div class=\"outer\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h2 align=\"center\">게시판</h2>\r\n");
      out.write("\t\t<div class=\"tableArea\">\r\n");
      out.write("\t\t\t<table id=\"listArea\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th width=\"100px\">글번호</th>\r\n");
      out.write("\t\t\t\t\t<th width=\"100px\">카테고리</th>\r\n");
      out.write("\t\t\t\t\t<th width=\"300px\">글제목</th>\r\n");
      out.write("\t\t\t\t\t<th width=\"100px\">작성자</th>\r\n");
      out.write("\t\t\t\t\t<th width=\"100px\">조회수</th>\r\n");
      out.write("\t\t\t\t\t<th width=\"150px\">작성일</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
 if(list.isEmpty()){ 
      out.write("\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"6\" id=\"nolist\">조회된 리스트가 없습니다.</td>\r\n");
      out.write("\t\t\t\t\t\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t\t");
 for(Board b : list){ 
      out.write("\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(b.getbId() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(b.getCategory() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(b.getbTitle() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(b.getbWriter() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(b.getbCount() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t\t<td>");
      out.print(b.getCreateDate() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t<!-- 페이징 -->\r\n");
      out.write("\t\t<div class=\"pagingArea\" align=\"center\">\r\n");
      out.write("\t\t");
 if(!list.isEmpty()){ 
      out.write("\r\n");
      out.write("\t\t\t<!-- 맨 처음으로 -->\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/list.bo?currentPage=1'\">&lt;&lt;</button>\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<!-- 이전 페이지 -->\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/list.bo?currentPage=");
      out.print( currentPage - 1 );
      out.write("'\" id=\"beforeBtn\">&lt;</button>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\tif(");
      out.print(currentPage );
      out.write(" <=1){\r\n");
      out.write("\t\t\t\t\t$('#beforeBtn').attr('disabled', 'true');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 10개 페이지 목록 -->\r\n");
      out.write("\t\t\t");
 for(int p = startPage; p <= endPage; p++){ 
      out.write("\r\n");
      out.write("\t\t\t\t");
 if(p == currentPage){ 
      out.write("\r\n");
      out.write("\t\t\t\t<button id=\"choosen\" disabled>");
      out.print(p );
      out.write("</button>\r\n");
      out.write("\t\t\t\t");
 } else { 
      out.write("\r\n");
      out.write("\t\t\t\t<button id=\"numBtn\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/list.bo?currentPage=");
      out.print( p );
      out.write('\'');
      out.write('"');
      out.write('>');
      out.print( p );
      out.write("</button>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 다음 페이지로 -->\r\n");
      out.write("\t\t\t<button id=\"afterBtn\" onclick=\"location.href='");
      out.print( request.getContextPath() );
      out.write("/list.bo?currentPage=");
      out.print( currentPage + 1 );
      out.write("'\">&gt;</button>\r\n");
      out.write("\t\t\t<script>\r\n");
      out.write("\t\t\t\tif(");
      out.print( currentPage );
      out.write(" >= ");
      out.print( maxPage );
      out.write("){\r\n");
      out.write("\t\t\t\t\t$('#afterBtn').attr('disable', 'true');\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t</script>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<!-- 맨 끝으로 -->\r\n");
      out.write("\t\t\t<button onclick=\"location.href='");
      out.print(request.getContextPath() );
      out.write("/list.bo?currentPage=");
      out.print( maxPage );
      out.write("'\">&gt;&gt;</button>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t\t<div class=\"searchArea\" align=\"right\">\r\n");
      out.write("\t\t\t\t");
 if(loginUser != null){ 
      out.write("\r\n");
      out.write("\t\t\t\t<button onclick=\"location.href='views/board/boardInsertForm.jsp'\">작성하기</button>\r\n");
      out.write("\t\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<script>\r\n");
      out.write("\t $(function(){\r\n");
      out.write("\t\t $('#listArea td').mouseenter(function(){\r\n");
      out.write("\t\t\t $(this).parent().css({'background':'darkgray','cursor':'pointer'});\r\n");
      out.write("\t\t }).mouseout(function(){\r\n");
      out.write("\t\t\t $(this).parent().css({'background':'none'});\r\n");
      out.write("\t\t }).click(function(){\r\n");
      out.write("\t\t\t var bid = $(this).parent().children().eq(0).text();\r\n");
      out.write("\t\t\t \r\n");
      out.write("\t\t\t if('");
      out.print( loginUser );
      out.write("' != 'null'){\r\n");
      out.write("\t\t\t\t location.href='");
      out.print( request.getContextPath() );
      out.write("/detail.bo?bid=' + bid;\r\n");
      out.write("\t\t\t }else {\r\n");
      out.write("\t\t\t\t alert('회원만 이용할 수 있는 서비스입니다.');\r\n");
      out.write("\t\t\t }\r\n");
      out.write("\t\t });\r\n");
      out.write("\t });\r\n");
      out.write("\t \r\n");
      out.write("\t</script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
