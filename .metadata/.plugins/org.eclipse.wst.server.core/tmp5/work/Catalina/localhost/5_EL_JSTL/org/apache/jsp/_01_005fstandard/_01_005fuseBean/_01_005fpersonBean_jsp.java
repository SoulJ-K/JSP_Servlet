/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.53
 * Generated at: 2020-04-29 11:12:54 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp._01_005fstandard._01_005fuseBean;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class _01_005fpersonBean_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\t<h2>JSP표준액션 태그 중 useBean을 사용하여 VO클래스의 객체 정보 불러와보기</h2>\r\n");
      out.write("\t");
      action.model.vo.Person person1 = null;
      person1 = (action.model.vo.Person) _jspx_page_context.getAttribute("person1", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (person1 == null){
        person1 = new action.model.vo.Person();
        _jspx_page_context.setAttribute("person1", person1, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\t<!-- 무슨 객체를 만들려는지 알지 못함. 그래서 class를 통해 위치를 정해서 어디에 있는 객체를 사용하려는지 표시.\r\n");
      out.write("\t scope: 해당 스코프 안에서 속성값이 해당 클래스 타입으로 존재하면 그 객체를 가지고 오고 없으면 새로 생성-->\t\t\r\n");
      out.write("\t\r\n");
      out.write("\t이름 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("person1")).getName())));
      out.write("<br>\r\n");
      out.write("\t성별 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("person1")).getGender())));
      out.write("<br>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("\t나이 : ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("person1")).getNai())));
      out.write("<br>\r\n");
      out.write("\t<!-- Person의 get메소드의 이름을 찾아서 가져옴 -->\r\n");
      out.write("\t\r\n");
      out.write("\t<hr>\r\n");
      out.write("\t\r\n");
      out.write("\t<h2>JSP표준액션 태그 중 useBean을 사용하여 VO클래스에 데이터 초기화 하기</h2>\r\n");
      out.write("\t");
      action.model.vo.Person person2 = null;
      person2 = (action.model.vo.Person) _jspx_page_context.getAttribute("person2", javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      if (person2 == null){
        person2 = new action.model.vo.Person();
        _jspx_page_context.setAttribute("person2", person2, javax.servlet.jsp.PageContext.REQUEST_SCOPE);
      }
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t");
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("person2"), "name", "박신우", null, null, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("person2"), "gender", "F", null, null, false);
      out.write('\r');
      out.write('\n');
      out.write('	');
      org.apache.jasper.runtime.JspRuntimeLibrary.introspecthelper(_jspx_page_context.findAttribute("person2"), "nai", "20", null, null, false);
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t이름 :  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("person2")).getName())));
      out.write(" <br>\r\n");
      out.write("\t성별 :  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("person2")).getGender())));
      out.write("<br>\r\n");
      out.write("\t나이 :  ");
      out.write(org.apache.jasper.runtime.JspRuntimeLibrary.toString((((action.model.vo.Person)_jspx_page_context.findAttribute("person2")).getNai())));
      out.write("<br>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
